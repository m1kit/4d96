{"version":3,"sources":["main.js"],"names":["board","turn","history","historyIndex","isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","catch","e","console","error","State","INVALID","EMPTY","RED","GREEN","BLUE","Direction","UPPER_LEFT","LOWER_RIGHT","LEFT","RIGHT","LOWER_LEFT","UPPER_RIGHT","Board","size","_classCallCheck","this","data","Array","y","length","x","d","_createClass","key","value","color","result","count","line1","repeat","line2","char","isAvailable","at","ds","getAvailableDirections","placed","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","outer","_step","_iterator","Symbol","iterator","next","done","c","push","err","return","p","getReplacables","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","putForcibly","apply","_toConsumableArray","concat","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Object","values","valid","s","r","g","b","direction","cell","document","getElementById","scoreboard","fill","setAttribute","player","flush","possible","_arr","_i","innerText","classList","add","remove","put","updateHistory","stack","confirm","init","i","_loop","_loop2","onclick","addEventListener","cc","targets","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4"],"mappings":"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","file":"main.min.js","sourcesContent":["/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n/* eslint no-labels: 0, no-loop-func: 0, no-constant-condition: 0, no-unused-vars: 0, no-alert: 0 */\n(function() {\n  'use strict';\n  let board;\n  let turn;\n  let history;\n  let historyIndex;\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n  );\n\n  if ('serviceWorker' in navigator &&\n    (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n      .then(function(registration) {\n        // updatefound is fired if service-worker.js changes.\n        registration.onupdatefound = function() {\n          // updatefound is also fired the very first time the SW is installed,\n          // and there's no need to prompt for a reload at that point.\n          // So check here to see if the page is already controlled,\n          // i.e. whether there's an existing service worker.\n          if (navigator.serviceWorker.controller) {\n            // The updatefound event implies that registration.installing is set:\n            // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n            var installingWorker = registration.installing;\n\n            installingWorker.onstatechange = function() {\n              switch (installingWorker.state) {\n                case 'installed':\n                  // At this point, the old content will have been purged and the\n                  // fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in the page's interface.\n                  break;\n\n                case 'redundant':\n                  throw new Error('The installing ' +\n                    'service worker became redundant.');\n\n                default:\n                // Ignore\n              }\n            };\n          }\n        };\n      }).catch(function(e) {\n        console.error('Error during service worker registration:', e);\n      });\n  }\n\n  const State = {\n    INVALID: 0,\n    EMPTY: 1,\n    RED: 2,\n    GREEN: 3,\n    BLUE: 4\n  };\n  const Direction = {\n    UPPER_LEFT: 0,\n    LOWER_RIGHT: 1,\n    LEFT: 2,\n    RIGHT: 3,\n    LOWER_LEFT: 4,\n    UPPER_RIGHT: 5\n  };\n\n  class Board {\n    constructor(size) {\n      this.size = size;\n      this.data = new Array(size * 2);\n      for (let y = 0; y < this.data.length; y++) {\n        this.data[y] = new Array(size * 4);\n        for (let x = 0; x < this.data[y].length; x++) {\n          const d = 2 * y + x;\n          if (2 * size - 1 <= d && d <= 4 * size + 6) {\n            this.data[y][x] = State.EMPTY;\n          } else {\n            this.data[y][x] = State.INVALID;\n          }\n        }\n      }\n    }\n\n    stringfy(color) {\n      let result = '';\n      let count = 0;\n      for (let y = 0; y < this.data.length; y++) {\n        let line1 = ' '.repeat(2 * y);\n        let line2 = ' '.repeat(2 * y + 2);\n        for (let x = 0; x < this.data[y].length; x++) {\n          const char = color && this.isAvailable(x, y, color) ?\n            count++ : this.data[y][x].char;\n          if (x % 2 === 0) {\n            line1 += char + '   ';\n          } else {\n            line2 += char + '   ';\n          }\n        }\n        result += line1 + '\\n' + line2 + '\\n';\n      }\n      return result;\n    }\n\n    getReplacables(x, y, color) {\n      if (this.at(x, y) === State.EMPTY) {\n        const ds = this.getAvailableDirections(x, y, color);\n        if (ds.length === 0) {\n          return [];\n        }\n        const placed = [[x, y]];\n        outer: for (let d of ds) {\n          let c = [x, y];\n          while (true) {\n            c = Board.next(c[0], c[1], d);\n            if (this.at(c[0], c[1]) === color) {\n              continue outer;\n            }\n            placed.push([c[0], c[1]]);\n          }\n        }\n        return placed;\n      }\n      return [];\n    }\n\n    put(x, y, color) {\n      const p = this.getReplacables(x, y, color);\n      if (p.length === 0) {\n        return false;\n      }\n      for (let c of p) {\n        this.putForcibly(...c, color);\n      }\n      return true;\n    }\n\n    putForcibly(x, y, color) {\n      this.data[y][x] = color;\n    }\n\n    at(x, y) {\n      if (x < 0 || y < 0 || x >= this.size * 4 || y >= this.size * 2) {\n        return State.INVALID;\n      }\n      return this.data[y][x];\n    }\n\n    area() {\n      return 2 * this.size * (2 * this.size - 1);\n    }\n\n    getAvailableDirections(x, y, color) {\n      if (this.at(x, y) !== State.EMPTY) {\n        return [];\n      }\n      let result = [];\n      outer: for (let d of Object.values(Direction)) {\n        let c = [x, y];\n        let valid = false;\n        while (true) {\n          c = Board.next(c[0], c[1], d);\n          const s = this.at(...c);\n          if (s === color) {\n            if (valid) {\n              result.push(d);\n            }\n            continue outer;\n          } else if (s === State.EMPTY || s === State.INVALID) {\n            continue outer;\n          } else {\n            valid = true;\n          }\n        }\n      }\n      return result;\n    }\n\n    isAvailable(x, y, color) {\n      return this.getAvailableDirections(x, y, color).length > 0;\n    }\n\n    getAvailables(color) {\n      const result = [];\n      for (let y = 0; y < this.data.length; y++) {\n        for (let x = 0; x < this.data[y].length; x++) {\n          if (this.isAvailable(x, y, color)) {\n            result.push([x, y]);\n          }\n        }\n      }\n      return result;\n    }\n\n    count(color) {\n      let c = 0;\n      for (let y = 0; y < this.data.length; y++) {\n        for (let x = 0; x < this.data[y].length; x++) {\n          if (this.at(x, y) === color) {\n            c++;\n          }\n        }\n      }\n      return c;\n    }\n\n    getWhoWon() {\n      const r = this.count(State.RED);\n      const g = this.count(State.GREEN);\n      const b = this.count(State.BLUE);\n      if (r >= g && r >= b) {\n        return State.RED;\n      }\n      return g >= b ? State.GREEN : State.BLUE;\n    }\n\n    static next(x, y, direction) {\n      switch (direction) {\n        case Direction.UPPER_LEFT:\n          return [x + (x % 2 === 0 ? 1 : -1), y - (x % 2 === 0 ? 1 : 0)];\n        case Direction.LOWER_RIGHT:\n          return [x + (x % 2 === 0 ? 1 : -1), y + (x % 2 === 0 ? 0 : 1)];\n        case Direction.LEFT:\n          return [x - 1, y];\n        case Direction.RIGHT:\n          return [x + 1, y];\n        case Direction.LOWER_LEFT:\n          return [x - 1, y + (x % 2 === 0 ? 0 : 1)];\n        case Direction.UPPER_RIGHT:\n          return [x + 1, y - (x % 2 === 0 ? 1 : 0)];\n        default:\n          throw new Error();\n      }\n    }\n  }\n\n  function cell(x, y) {\n    return document.getElementById(y + '-' + x);\n  }\n\n  function scoreboard(color) {\n    switch (color) {\n      case State.RED:\n        return document.getElementById('red');\n      case State.GREEN:\n        return document.getElementById('green');\n      case State.BLUE:\n        return document.getElementById('blue');\n      default:\n        throw new Error();\n    }\n  }\n\n  function fill(x, y, color) {\n    cell(x, y).setAttribute('fill', color);\n  }\n\n  function player() {\n    switch (turn % 3) {\n      case 0:\n        return State.RED;\n      case 1:\n        return State.GREEN;\n      case 2:\n        return State.BLUE;\n      default:\n        throw new Error();\n    }\n  }\n\n  function flush() {\n    let possible = false;\n    for (let y = 0; y < board.size * 2; y++) {\n      middle: for (let x = 0; x < board.size * 4; x++) {\n        let color;\n        switch (board.at(x, y)) {\n          case State.INVALID:\n            continue;\n          case State.EMPTY:\n            const p = board.getReplacables(x, y, player());\n            if (p.length === 0) {\n              fill(x, y, '#adadad');\n            } else {\n              fill(x, y, '#f8fbf8');\n              possible = true;\n            }\n            break;\n          case State.RED:\n            fill(x, y, '#e95464');\n            break;\n          case State.GREEN:\n            fill(x, y, '#38b48b');\n            break;\n          case State.BLUE:\n            fill(x, y, '#3e62ad');\n            break;\n          default:\n            throw new Error();\n        }\n      }\n    }\n    for (let color of [State.RED, State.GREEN, State.BLUE]) {\n      scoreboard(color).innerText = board.count(color);\n      if (player() === color) {\n        scoreboard(color).classList.add('player');\n      } else {\n        scoreboard(color).classList.remove('player');\n      }\n    }\n    return possible;\n  }\n\n  function put(x, y) {\n    if (board.put(x, y, player())) {\n      updateHistory();\n      next(0);\n    }\n  }\n\n  function next(stack) {\n    if (stack >= 3) {\n      flush();\n      if (confirm('試合が終了しました。次の試合を開始します。')) {\n        init();\n      }\n    } else {\n      turn++;\n      if (!flush()) {\n        next(stack + 1);\n      }\n    }\n  }\n\n  function updateHistory() {\n    let d = new Array(board.data.length);\n    for (let i = 0; i < board.data.length; i++) {\n      d[i] = [].concat(board.data[i]);\n    }\n    historyIndex++;\n    history[historyIndex] = {\n      data: d,\n      turn: turn\n    };\n  }\n\n  function undo() {\n    if (historyIndex > 0) {\n      historyIndex--;\n      const d = history[historyIndex];\n      board.data = d.data;\n      turn = d.turn;\n      flush();\n      return true;\n    }\n    return false;\n  }\n\n  function redo() {\n    if (historyIndex < history.length - 1) {\n      historyIndex++;\n      const d = history[historyIndex];\n      board.data = d.data;\n      turn = d.turn;\n      flush();\n      return true;\n    }\n    return false;\n  }\n\n  function init() {\n    history = [];\n    historyIndex = -1;\n    board = new Board(4);\n    turn = 0;\n    board.putForcibly(10, 2, State.RED);\n    board.putForcibly(11, 2, State.GREEN);\n    board.putForcibly(11, 3, State.GREEN);\n    board.putForcibly(10, 4, State.BLUE);\n    board.putForcibly(8, 5, State.BLUE);\n    board.putForcibly(7, 5, State.RED);\n    board.putForcibly(5, 5, State.RED);\n    board.putForcibly(4, 5, State.GREEN);\n    board.putForcibly(4, 4, State.GREEN);\n    board.putForcibly(5, 3, State.BLUE);\n    board.putForcibly(7, 2, State.BLUE);\n    board.putForcibly(8, 2, State.RED);\n    for (let y = 0; y < board.size * 2; y++) {\n      for (let x = 0; x < board.size * 4; x++) {\n        if (board.at(x, y) !== State.INVALID) {\n          cell(x, y).onclick = () => put(x, y);\n          cell(x, y).addEventListener('mouseenter', () => {\n            let cc;\n            switch (player()) {\n              case State.RED:\n                cc = '#ff8494';\n                break;\n              case State.GREEN:\n                cc = '#68e4bb';\n                break;\n              case State.BLUE:\n                cc = '#6e92dd';\n                break;\n              default:\n                throw new Error();\n            }\n            const targets = board.getReplacables(x, y, player());\n            for (let p of targets) {\n              fill(...p, cc);\n            }\n          }, false);\n          cell(x, y).addEventListener('mouseleave', () => {\n            flush();\n          }, false);\n        }\n      }\n    }\n    flush();\n    updateHistory();\n  }\n  init();\n})();\n"]}